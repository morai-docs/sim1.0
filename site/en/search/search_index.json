{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MORAI Docs","text":"<p>Welcome to MORAI Docs for SIM 1.0</p>"},{"location":"sim-drive/","title":"MORAI SIM: Drive Documentation","text":"<p>  This document is a User Guide for MORAI SIM: Air alpha version provided to CIRRUS AIRCRAFT</p> <p>Take a look the MORAI SIM: Air's concept and features.   Start MORAI SIM: Air by reading the introductory tutorial, then check the user guide for more information.</p> <ul> <li> To checkout MORAI SIM: Air, Go to Introduction </li> <li> To start MORAI SIM: Air, Go to Getting Started </li> <li> To use MORAI SIM: Air, Go to User Guide </li> </ul>"},{"location":"sim-mari/","title":"Welcome to MORAI SIM Maritime Documentation EN \ud83d\udc4d","text":"<p>  This document is a User Guide for MORAI SIM: Air alpha version provided to CIRRUS AIRCRAFT</p> <p>Take a look the MORAI SIM: Air's concept and features.   Start MORAI SIM: Air by reading the introductory tutorial, then check the user guide for more information.</p> <ul> <li> To checkout MORAI SIM: Air, Go to Introduction </li> <li> To start MORAI SIM: Air, Go to Getting Started </li> <li> To use MORAI SIM: Air, Go to User Guide </li> </ul>"},{"location":"sim-robot/","title":"Welcome to MORAI SIM Robotics Documentation EN \ud83d\udc4d","text":"<p>  This document is a User Guide for MORAI SIM: Air alpha version provided to CIRRUS AIRCRAFT</p> <p>Take a look the MORAI SIM: Air's concept and features.   Start MORAI SIM: Air by reading the introductory tutorial, then check the user guide for more information.</p> <ul> <li> To checkout MORAI SIM: Air, Go to Introduction </li> <li> To start MORAI SIM: Air, Go to Getting Started </li> <li> To use MORAI SIM: Air, Go to User Guide </li> </ul>"},{"location":"getting-started/","title":"Getting Startged with MORAI SIM 1.0","text":"<ul> <li>System Requirements</li> <li>Installation</li> <li>User Interface</li> </ul>"},{"location":"getting-started/execution/","title":"MORAI SIM Execution","text":"<p>This section describes the system requirements for installing MORAI SIM: Air and how to run it.</p>"},{"location":"getting-started/execution/#license-activation","title":"License Activation","text":""},{"location":"getting-started/execution/#minumum-specs","title":"Minumum specs","text":"<p>The OS environment in which MORAI SIM: Air can run is as follows.</p> <ul> <li>Windows 10 or higher </li> <li>Ubuntu 18.04 LTS or higher</li> </ul>  \u2139\ufe0f  NOTE   A version for Ubuntu (Linux) is under development."},{"location":"getting-started/execution/#maximum-specs","title":"Maximum specs","text":"<p>To use multiple sensors in MORAI SIM: Air, the system specifications below should be satisfied.</p> <ul> <li>CPU: Intel i7 or higher</li> <li>RAM: 32GB  or higher</li> <li>VGA: RTX 30 series or higher</li> </ul>"},{"location":"getting-started/execution/#launcher-download","title":"Launcher Download","text":"<p>To use multiple sensors in MORAI SIM: Air, the system specifications below should be satisfied.  - CPU: Intel i7 or higher  - RAM: 32GB  or higher  - VGA: RTX 30 series or higher</p>"},{"location":"getting-started/execution/#running-morai-sim","title":"Running MORAI SIM","text":"<p>Install and run MORAI SIM: Air in the following order.</p>"},{"location":"getting-started/execution/#step-1-download-morai-sim-launcher","title":"Step 1: Download MORAI SIM Launcher","text":"<p>Download the MORAI SIM Launcher package according to the user's OS environment.</p>  \u2705  TIPS   For the download path of MORAI SIM Launcher, please contact the MORAI project manager."},{"location":"getting-started/execution/#step-2-run-the-launcher-program","title":"Step 2: Run the launcher program","text":"<p>1) Run UELauncher.exe from the downloaded package path. </p> <p></p> <p>2) On the launcher execution screen as shown below, click Start after entering the Username and Password guided by MORAI.</p> <p></p>  \u2705  TIPS   For details regarding Username and Password information, please contact the MORAI project manager."},{"location":"getting-started/execution/#step-3-select-map-and-aircraft","title":"Step 3: Select Map and Aircraft","text":"<p>After launcher execution is completed, the following Map and Vehicle screen appears.  After selecting both the map and aircraft model to be used in the simulator, click Start to run the simulator.</p> <p></p> <p>The Runway {number} option of ** Select Map** is a spawn point setting that sets the runway facing the direction of '{number}+0' degrees.  Ex) If you select Runway 3, the spawn point is the runway facing a 30 degree direction.</p>  \u2705  TIPS   The start button does not appear unless either the map or aircraft model is selected."},{"location":"getting-started/execution/#step-4-check-the-simulator-run","title":"Step 4: Check the simulator run","text":"<p>When the MORAI SIM:Air simulator is normally executed, the following simulator execution screen appears.</p> <p></p>"},{"location":"getting-started/execution/#handling-execution-issues","title":"Handling execution issues","text":""},{"location":"getting-started/network/","title":"Network Environment Configuration","text":"<p>This section describes the system requirements for installing MORAI SIM: Air and how to run it.</p>"},{"location":"getting-started/network/#license-activation","title":"License Activation","text":""},{"location":"getting-started/network/#minumum-specs","title":"Minumum specs","text":"<p>The OS environment in which MORAI SIM: Air can run is as follows.</p> <ul> <li>Windows 10 or higher </li> <li>Ubuntu 18.04 LTS or higher</li> </ul>  \u2139\ufe0f  NOTE   A version for Ubuntu (Linux) is under development."},{"location":"getting-started/network/#maximum-specs","title":"Maximum specs","text":"<p>To use multiple sensors in MORAI SIM: Air, the system specifications below should be satisfied.</p> <ul> <li>CPU: Intel i7 or higher</li> <li>RAM: 32GB  or higher</li> <li>VGA: RTX 30 series or higher</li> </ul>"},{"location":"getting-started/network/#launcher-download","title":"Launcher Download","text":"<p>To use multiple sensors in MORAI SIM: Air, the system specifications below should be satisfied.  - CPU: Intel i7 or higher  - RAM: 32GB  or higher  - VGA: RTX 30 series or higher</p>"},{"location":"getting-started/network/#running-morai-sim","title":"Running MORAI SIM","text":"<p>Install and run MORAI SIM: Air in the following order.</p>"},{"location":"getting-started/network/#step-1-download-morai-sim-launcher","title":"Step 1: Download MORAI SIM Launcher","text":"<p>Download the MORAI SIM Launcher package according to the user's OS environment.</p>  \u2705  TIPS   For the download path of MORAI SIM Launcher, please contact the MORAI project manager."},{"location":"getting-started/network/#step-2-run-the-launcher-program","title":"Step 2: Run the launcher program","text":"<p>1) Run UELauncher.exe from the downloaded package path. </p> <p></p> <p>2) On the launcher execution screen as shown below, click Start after entering the Username and Password guided by MORAI.</p> <p></p>  \u2705  TIPS   For details regarding Username and Password information, please contact the MORAI project manager."},{"location":"getting-started/network/#step-3-select-map-and-aircraft","title":"Step 3: Select Map and Aircraft","text":"<p>After launcher execution is completed, the following Map and Vehicle screen appears.  After selecting both the map and aircraft model to be used in the simulator, click Start to run the simulator.</p> <p></p> <p>The Runway {number} option of ** Select Map** is a spawn point setting that sets the runway facing the direction of '{number}+0' degrees.  Ex) If you select Runway 3, the spawn point is the runway facing a 30 degree direction.</p>  \u2705  TIPS   The start button does not appear unless either the map or aircraft model is selected."},{"location":"getting-started/network/#step-4-check-the-simulator-run","title":"Step 4: Check the simulator run","text":"<p>When the MORAI SIM:Air simulator is normally executed, the following simulator execution screen appears.</p> <p></p>"},{"location":"getting-started/network/#handling-execution-issues","title":"Handling execution issues","text":""},{"location":"getting-started/requirements/","title":"System Requirements","text":"<p>This section describes the system requirements for installing MORAI SIM: Air and how to run it.</p>"},{"location":"getting-started/requirements/#system-specifications","title":"System Specifications","text":""},{"location":"getting-started/requirements/#minumum-specs","title":"Minumum specs","text":"<p>The OS environment in which MORAI SIM: Air can run is as follows.</p> <ul> <li>Windows 10 or higher </li> <li>Ubuntu 18.04 LTS or higher</li> </ul>  \u2139\ufe0f  NOTE   A version for Ubuntu (Linux) is under development."},{"location":"getting-started/requirements/#maximum-specs","title":"Maximum specs","text":"<p>To use multiple sensors in MORAI SIM: Air, the system specifications below should be satisfied.</p> <ul> <li>CPU: Intel i7 or higher</li> <li>RAM: 32GB  or higher</li> <li>VGA: RTX 30 series or higher</li> </ul>"},{"location":"getting-started/requirements/#system-configuration","title":"System Configuration","text":""},{"location":"simair/","title":"Welcome to MORAI SIM Air Documentation EN\ud83d\udc4d","text":"<p>  This document is a User Guide for MORAI SIM: Air alpha version provided to CIRRUS AIRCRAFT</p> <p>Take a look the MORAI SIM: Air's concept and features.   Start MORAI SIM: Air by reading the introductory tutorial, then check the user guide for more information.</p> <ul> <li> To checkout MORAI SIM: Air, Go to Introduction </li> <li> To start MORAI SIM: Air, Go to Getting Started </li> <li> To use MORAI SIM: Air, Go to User Guide </li> </ul>"},{"location":"simair/intro/morai-simair/","title":"About MORAI SIM: Air","text":"<p>This section explains the concept and features of MORAI SIM: Air and the configuration environment.</p>"},{"location":"simair/intro/morai-simair/#concept-and-key-features","title":"Concept and Key Features","text":"<p>MORAI SIM: Air is a simulation platform that can verify autonomous flight systems used in various industries such as Urban Air Mobility (UAM), unmanned aerial vehicles (Drones), and light aircraft in a virtual environment. </p> <p>MORAI SIM: Air provides a variety of real flight environments as virtual simulations using Digital Twin technology, so the safety of the aircraft can be verified more efficiently and accurately. And it reporduces actual flight facilities such as vertical take-off and landing facilities (vertiport) and airports for vehicle verification as a digital twin environment, and simulates the actual measurement data provided to the aircraft from each facility as it is.  MORAI SIM: Air virtualizes various sensors and flight dynamics model (FDM) specialized for the aviation industry, and can transmit and receive data in real-time by applying communication such as ROS2 and UDP. </p> <p>The main features of MORAI SIM: Air are as follows.</p> <ul> <li>Provides a simulation environment based on Unreal Engine, a physics engine </li> <li>Supports realistic flight dynamics model (FDM) for Cirrus SR22T and 6 degrees of freedom (DOF) data</li> <li>Supports realistic flight dynamics model (FDM) developed with JSBSim, and 6 degrees of freedom (DOF) data</li> <li>Reproduces weather and time variation with dynamic environment</li> <li>Integration with external sensors and systems: Camera, GNSS, IMU, RADAR, 3D LiDAR</li> <li>Supports real-time transmission of flight status messages and sensor data through ROS2 and UDP communication</li> </ul>"},{"location":"simair/intro/morai-simair/#simulation-environment-based-on-unreal-engine","title":"Simulation environment based on Unreal Engine","text":"<p>MORAI SIM: Air utilizes the physics engine, Unreal Engine to provide a high-fidelity simulation environment for autonomous aerial vehicles, and it can reproduce object movement, physical conditions such as collision and penetration, as well as color and texture realistically. </p> <p>Unreal Engine allows for the creation of highly detailed 3D environments and provides a sophisticated physics engine that can simulate the behavior of objects in a realistic manner. This means that the movement of the aerial vehicles, as well as other objects in the simulation environment, are accurately represented. </p> <p>Moreover, the Unreal Engine can render textures and colors realistically, which helps to create a more immersive simulation experience for users. This allows users to visualize and interact with the simulation environment in a way that closely mirrors the real-world environment, and enables them to test and validate the performance of their autonomous flight systems under realistic conditions.</p>  Figure 1. 3D Simulation environment for Duluth airport provided by MORAI SIM: Air"},{"location":"simair/intro/morai-simair/#supports-realistic-flight-dynamics-model-and-6-dof","title":"Supports realistic flight dynamics model and 6 DOF","text":"<p>MORAI SIM: Air supports realistic flight dynamics models (FDM) based on JSBSim for simulation modeling of the behavior of aircraft engines and other systems.  Additionally, MORAI SIM: Air implements the Cirrus SR22T aircraft model and 6 degrees of freedom (DOF) data, providing a realistic simulation experience.</p>  Figure 2. Flight of SR22T model implemented in MORAI SIM: Air <p></p> <p> Figure 3. Flight control of SR22T with joystick in MORAI SIM: Air</p>"},{"location":"simair/intro/morai-simair/#reproduces-weather-and-time-variation-with-dynamic-environment","title":"Reproduces weather and time variation with dynamic environment","text":"<p>MORAI SIM: Air also includes a simulation of the environment and weather conditions, which affect the flight behavior and performance of the aerial vehicles. This allows users to test their autonomous flight systems under different conditions and scenarios.</p> <p> Figure 4. Reproduced video of weather and time condition changes in MORAI SIM: Air </p>"},{"location":"simair/intro/morai-simair/#integration-with-external-sensors-and-real-time-communication","title":"Integration with external sensors and real-time communication","text":"<p>MORAI SIM: Air supports integration with a variety of external sensors commonly used in autonomous flight systems, including Camera, GNSS, IMU, RADAR, and LiDAR sensors. This enables users to test and validate the integration and performance of their sensors and systems in a virtual environment. </p>  Figure 5. Sensor models provided by MORAI SIM: Air <p>Also, MORAI SIM: Air supports real-time communication for flight status messages and sensor data using the ROS2 and UDP communication protocols. This enables users to monitor and analyze the performance of their autonomous flight systems during the simulation in real-time.</p>  Figure 6. Network settings provided by MORAI SIM: Air"},{"location":"simdrive/","title":"MORAI SIM: Drive Documentation EN","text":"<p>  This document is a User Guide for MORAI SIM: Air alpha version provided to CIRRUS AIRCRAFT</p> <p>Take a look the MORAI SIM: Air's concept and features.   Start MORAI SIM: Air by reading the introductory tutorial, then check the user guide for more information.</p> <ul> <li> To checkout MORAI SIM: Air, Go to Introduction </li> <li> To start MORAI SIM: Air, Go to Getting Started </li> <li> To use MORAI SIM: Air, Go to User Guide </li> </ul>"},{"location":"simdrive/ui/","title":"SIM: Drive UI","text":"<p>This section discribes an overview of the MORAI SIM: Air user interface (UI) and provides the detailed information on each UI component.</p>"},{"location":"simdrive/ui/#overview","title":"Overview","text":"<p>The MORAI SIM: Air UI is designed to provide users with easy access to all necessary information and controls, allowing for a realistic and immersive simulation experience.  The entire UI screen of Sim Air is shown below.</p>  Figure 1. UI overview of MORAI SIM: Air"},{"location":"simdrive/ui/#default-ui","title":"Default UI","text":"<p>The default UI appears as soon as you enter the simulater for the first time.  Centered on the map and aircraft selected in the previous step, it consists of the following three parts: 1] Network and Sensor Settings, 2] Environment Settings, and 3] Flight Instruments.</p>  Figure 2. Default UI of MORAI SIM: Air"},{"location":"simdrive/ui/#1-network-and-sensor-settings","title":"1] Network and Sensor Settings","text":"<p>This menu is located in the upper left menu of the simulator screen, and provides access to the  network and sensor settings, which are the core features provided by the simulator. </p>  \u2705  TIPS   For details on how to use network and sensor functions, see the Using MORAI SIM: AIR part."},{"location":"simdrive/ui/#2-environment-settings","title":"2] Environment Settings","text":"<p>This menu is located in the upper right menu of the simulator screen, and provides weather and time of day configurations that determine the background and lighting of the simulator. </p>"},{"location":"simdrive/ui/#3-flight-instruments","title":"3] Flight Instruments","text":"<p>The flight instruments are located on the left side of the simulator screen, and provide real-time flight information such as the current heading, air speed, attitude, and altitude of the aircraft.</p>"},{"location":"simdrive/ui/#3-1-heading-indicator","title":"3-1] Heading Indicator","text":"<p>Displays the heading of the aircraft in degrees. </p>"},{"location":"simdrive/ui/#3-2-airspeed-indicator","title":"3-2] Airspeed Indicator","text":"<p>Displays the indicated airspeed in knots. </p>"},{"location":"simdrive/ui/#3-3-attitude-indicator","title":"3-3] Attitude Indicator","text":"<p>Displays the altitude of the aircraft with pich and bank values as shown below. </p> <ul> <li>Pitch: Displays the upper/lower pitch values on the vertical scale in increments of 5 degrees based on a small scale (in the order of '0 - 5 - 10 - 15 - 20 degrees').</li> <li>Bank: Displays left/right rolling values from 0 to 60 degrees based on the center 0 point (in the order of '0 - 10 - 20 - 30 - 45 - 60 degrees').</li> </ul>"},{"location":"simdrive/ui/#3-4-altimeter","title":"3-4] Altimeter","text":"<p>Displays the altitude of the aircraft with altitude above sea level (ASL) and altitude above ground (AVL) as shown below. </p> <ul> <li>ASL: Indicates altitude above sea level(ASL) on a circular scale (unit: feet).</li> <li>AVL: Indicates altitude above ground (AVL) in square numbers above the circular scale (unit: feet).</li> </ul>"},{"location":"simdrive/ui/#3-5-vertical-speed-indicator","title":"3-5] Vertical Speed Indicator","text":"<p>Displays the vertical speed of the aircraft in feet per minute. </p>"},{"location":"simdrive/ui/#aircraft-info-ui","title":"Aircraft Info UI","text":"<p>The Aircraft Information UI provides the aircraft control mode and current flight status such as airspeed and air pressure, as well as steering inputs for control surfaces and attitude, in detailed numerical values.</p> <p>If you click the mouse on the Ego aircraft, the Aircraft Information window appears on the right side of the simulator screen as shown below.</p>  Figure 3. Aircraft Info UI of MORAI SIM: Air"},{"location":"simdrive/ui/#1-aircraft-control-mode","title":"1] Aircraft Control Mode","text":"<p>Displays the mode to control the Ego aircraft with Manual Control Mode and Network Control Mode. </p> <p>Manual Control Mode is a mode in which the user controls the aircraft with a keyboard or joystick.  The default Manual Control Mode is keyboard control, and the keyboard <code>Q</code> key toggles between keyboard control and joystick control. </p> <p>To control the aircraft with a joystick, connect the joystick to the simulator via USB and press <code>Q</code>. Then, to control the aircraft with the keyboard, press <code>Q</code> again.</p>"},{"location":"simdrive/ui/#2-propulsion","title":"2] Propulsion","text":"<p>Displays engine RPM, air speed (knots), thrust according to throttle control and manifold pressure (inHg) according to  aircraft altitude. </p>  \u2705  TIPS   In Manual Control Mode, when you press <code>E</code> on the keyboard, the value of Throttle (up to 1) increases.  In addition, see the Basic Controls section for a detailed description of each key used to operate the aircraft with the keyboard in Manual Control Mode."},{"location":"simdrive/ui/#3-flight-control","title":"3] Flight Control","text":"<p>Displays the flight control surfaces and trim control value, as Primary Control, along with the Attitude, Vertical Info and Airspeed values \u200b\u200bof the aircraft in detailed numerical values. </p> <p>See below for descriptions of abbreviations and terms in Flight Control.</p>  \u2139\ufe0f  NOTE  <ul> <li>     AOA: Angle of Attack (degrees)     </li> <li>     EAS: Equivalent Airspeed (knots)     </li> <li>     TAS: True Airspeed (knots)     </li> <li>     GS: Ground Speed (knots)     </li> <li>     Climb Rate: Vertical Speed Indicator (feet per minute)     </li> <li>     Trim: Shows the input data of each trim from -1 to +1     </li> </ul>  \u2705  TIPS   See the Basic Controls section for a detailed description of each key for controlling the flight control surfaces and trim of each Aileron, Elevator, Rudder as Primary Control and Flap as Secondary Control."},{"location":"simdrive/about/overview/","title":"Document Overview","text":"<p>This section describes the purpose, target audiences, and scope of this document.</p>"},{"location":"simdrive/about/overview/#purpose","title":"Purpose","text":"<p>This document is written to guide the configuration environment and usage of \u2018MORAI SIM: Air\u2019, an autonomous flight simulation platform developed by Morai.</p>"},{"location":"simdrive/about/overview/#target-audience","title":"Target Audience","text":"<p>This document is written for aeronautical developers and researchers who want to verify air vehicles in various simulated virtual environments.</p>"},{"location":"simdrive/about/overview/#scope","title":"Scope","text":"<p>The scope of application of this document applies to the configuration environment and user interface of MORAI SIM: Air, and all functions provided by MORAI SIM: Air.</p>"},{"location":"simdrive/about/revision-history/","title":"Revision History","text":"<p>This section describes the revision history of the document in chronological order.</p> <p></p> Document Version Product Version Release Date Descriptions Author 1.0 Alpha 1.0 April 4, 2023 Initial Release MORAI Engineering Service Team"},{"location":"simdrive/about/terms-conventions/","title":"Terminology and Conventions","text":"<p>This section describes key terms and conventions commonly used in the document.</p>"},{"location":"simdrive/about/terms-conventions/#terminology","title":"Terminology","text":"<p>The key Terms and Abbreviations used in this documents are listed below:</p> Terms and Abbreviations Descriptions Ego Vehicle Control flight target aircraft in the simulator NPC Vehicle Surrounding aircraft that are not controlled flight targets in the simulator ROS2 The latest version of Robot Operating System(ROS) JSBSim An open source, multi-platform, object-oriented flight dynamics model (FDM) framework written in the C++ programming language AOA Angle of Attack, unit: degrees CAS Calibrated Airspeed, unit: knots GS Ground Speed, unit: knots Attitude Indicator Shows the altitude of the aircrafte Altimeter Shows the altitude of the aircraft above ground level(AGL) in feet Vertical Speed Indicator Shows the vertical speed of the aircraft in feet per minute"},{"location":"simdrive/about/terms-conventions/#conventions","title":"Conventions","text":"<p>The notational conventions for notes, warnings, and tips used in this document are as follows:</p>  \u2139\ufe0f  NOTE   General Information for related matters.  <p></p>  \u26a0\ufe0f   WARNING   For matters you should follow when setting or configuration  <p></p>  \u2705  TIPS   Useful tips when setting or configuration  <p></p>"},{"location":"simdrive/getting-started/","title":"Getting Startged with MORAI SIM: AIR","text":"<ul> <li>Installation</li> <li>User Interface</li> </ul>"},{"location":"simdrive/getting-started/installation/","title":"Installation","text":"<p>This section describes the system requirements for installing MORAI SIM: Air and how to run it.</p>"},{"location":"simdrive/getting-started/installation/#system-requirements","title":"System Requirements","text":""},{"location":"simdrive/getting-started/installation/#os-environment","title":"OS Environment","text":"<p>The OS environment in which MORAI SIM: Air can run is as follows.</p> <ul> <li>Windows 10 or higher </li> <li>Ubuntu 18.04 LTS or higher</li> </ul>  \u2139\ufe0f  NOTE   A version for Ubuntu (Linux) is under development."},{"location":"simdrive/getting-started/installation/#system-specifications","title":"System Specifications","text":"<p>To use multiple sensors in MORAI SIM: Air, the system specifications below should be satisfied.</p> <ul> <li>CPU: Intel i7 or higher</li> <li>RAM: 32GB  or higher</li> <li>VGA: RTX 30 series or higher</li> </ul>"},{"location":"simdrive/getting-started/installation/#running-morai-sim-air","title":"Running MORAI SIM: Air","text":"<p>Install and run MORAI SIM: Air in the following order.</p>"},{"location":"simdrive/getting-started/installation/#step-1-download-morai-sim-launcher","title":"Step 1: Download MORAI SIM Launcher","text":"<p>Download the MORAI SIM Launcher package according to the user's OS environment.</p>  \u2705  TIPS   For the download path of MORAI SIM Launcher, please contact the MORAI project manager."},{"location":"simdrive/getting-started/installation/#step-2-run-the-launcher-program","title":"Step 2: Run the launcher program","text":"<p>1) Run UELauncher.exe from the downloaded package path. </p> <p></p> <p>2) On the launcher execution screen as shown below, click Start after entering the Username and Password guided by MORAI.</p> <p></p>  \u2705  TIPS   For details regarding Username and Password information, please contact the MORAI project manager."},{"location":"simdrive/getting-started/installation/#step-3-select-map-and-aircraft","title":"Step 3: Select Map and Aircraft","text":"<p>After launcher execution is completed, the following Map and Vehicle screen appears.  After selecting both the map and aircraft model to be used in the simulator, click Start to run the simulator.</p> <p></p> <p>The Runway {number} option of ** Select Map** is a spawn point setting that sets the runway facing the direction of '{number}+0' degrees.  Ex) If you select Runway 3, the spawn point is the runway facing a 30 degree direction.</p>  \u2705  TIPS   The start button does not appear unless either the map or aircraft model is selected."},{"location":"simdrive/getting-started/installation/#step-4-check-the-simulator-run","title":"Step 4: Check the simulator run","text":"<p>When the MORAI SIM:Air simulator is normally executed, the following simulator execution screen appears.</p> <p></p>"},{"location":"simdrive/getting-started/ui/","title":"User Interface","text":"<p>This section discribes an overview of the MORAI SIM: Air user interface (UI) and provides the detailed information on each UI component.</p>"},{"location":"simdrive/getting-started/ui/#ui-overview","title":"UI Overview","text":"<p>The MORAI SIM: Air UI is designed to provide users with easy access to all necessary information and controls, allowing for a realistic and immersive simulation experience.  The entire UI screen of Sim Air is shown below.</p>  Figure 1. UI overview of MORAI SIM: Air"},{"location":"simdrive/getting-started/ui/#default-ui","title":"Default UI","text":"<p>The default UI appears as soon as you enter the simulater for the first time.  Centered on the map and aircraft selected in the previous step, it consists of the following three parts: 1] Network and Sensor Settings, 2] Environment Settings, and 3] Flight Instruments.</p>  Figure 2. Default UI of MORAI SIM: Air"},{"location":"simdrive/getting-started/ui/#1-network-and-sensor-settings","title":"1] Network and Sensor Settings","text":"<p>This menu is located in the upper left menu of the simulator screen, and provides access to the  network and sensor settings, which are the core features provided by the simulator. </p>  \u2705  TIPS   For details on how to use network and sensor functions, see the Using MORAI SIM: AIR part."},{"location":"simdrive/getting-started/ui/#2-environment-settings","title":"2] Environment Settings","text":"<p>This menu is located in the upper right menu of the simulator screen, and provides weather and time of day configurations that determine the background and lighting of the simulator. </p>"},{"location":"simdrive/getting-started/ui/#3-flight-instruments","title":"3] Flight Instruments","text":"<p>The flight instruments are located on the left side of the simulator screen, and provide real-time flight information such as the current heading, air speed, attitude, and altitude of the aircraft.</p>"},{"location":"simdrive/getting-started/ui/#3-1-heading-indicator","title":"3-1] Heading Indicator","text":"<p>Displays the heading of the aircraft in degrees. </p>"},{"location":"simdrive/getting-started/ui/#3-2-airspeed-indicator","title":"3-2] Airspeed Indicator","text":"<p>Displays the indicated airspeed in knots. </p>"},{"location":"simdrive/getting-started/ui/#3-3-attitude-indicator","title":"3-3] Attitude Indicator","text":"<p>Displays the altitude of the aircraft with pich and bank values as shown below. </p> <ul> <li>Pitch: Displays the upper/lower pitch values on the vertical scale in increments of 5 degrees based on a small scale (in the order of '0 - 5 - 10 - 15 - 20 degrees').</li> <li>Bank: Displays left/right rolling values from 0 to 60 degrees based on the center 0 point (in the order of '0 - 10 - 20 - 30 - 45 - 60 degrees').</li> </ul>"},{"location":"simdrive/getting-started/ui/#3-4-altimeter","title":"3-4] Altimeter","text":"<p>Displays the altitude of the aircraft with altitude above sea level (ASL) and altitude above ground (AVL) as shown below. </p> <ul> <li>ASL: Indicates altitude above sea level(ASL) on a circular scale (unit: feet).</li> <li>AVL: Indicates altitude above ground (AVL) in square numbers above the circular scale (unit: feet).</li> </ul>"},{"location":"simdrive/getting-started/ui/#3-5-vertical-speed-indicator","title":"3-5] Vertical Speed Indicator","text":"<p>Displays the vertical speed of the aircraft in feet per minute. </p>"},{"location":"simdrive/getting-started/ui/#aircraft-info-ui","title":"Aircraft Info UI","text":"<p>The Aircraft Information UI provides the aircraft control mode and current flight status such as airspeed and air pressure, as well as steering inputs for control surfaces and attitude, in detailed numerical values.</p> <p>If you click the mouse on the Ego aircraft, the Aircraft Information window appears on the right side of the simulator screen as shown below.</p>  Figure 3. Aircraft Info UI of MORAI SIM: Air"},{"location":"simdrive/getting-started/ui/#1-aircraft-control-mode","title":"1] Aircraft Control Mode","text":"<p>Displays the mode to control the Ego aircraft with Manual Control Mode and Network Control Mode. </p> <p>Manual Control Mode is a mode in which the user controls the aircraft with a keyboard or joystick.  The default Manual Control Mode is keyboard control, and the keyboard <code>Q</code> key toggles between keyboard control and joystick control. </p> <p>To control the aircraft with a joystick, connect the joystick to the simulator via USB and press <code>Q</code>. Then, to control the aircraft with the keyboard, press <code>Q</code> again.</p>"},{"location":"simdrive/getting-started/ui/#2-propulsion","title":"2] Propulsion","text":"<p>Displays engine RPM, air speed (knots), thrust according to throttle control and manifold pressure (inHg) according to  aircraft altitude. </p>  \u2705  TIPS   In Manual Control Mode, when you press <code>E</code> on the keyboard, the value of Throttle (up to 1) increases.  In addition, see the Basic Controls section for a detailed description of each key used to operate the aircraft with the keyboard in Manual Control Mode."},{"location":"simdrive/getting-started/ui/#3-flight-control","title":"3] Flight Control","text":"<p>Displays the flight control surfaces and trim control value, as Primary Control, along with the Attitude, Vertical Info and Airspeed values \u200b\u200bof the aircraft in detailed numerical values. </p> <p>See below for descriptions of abbreviations and terms in Flight Control.</p>  \u2139\ufe0f  NOTE  <ul> <li>     AOA: Angle of Attack (degrees)     </li> <li>     EAS: Equivalent Airspeed (knots)     </li> <li>     TAS: True Airspeed (knots)     </li> <li>     GS: Ground Speed (knots)     </li> <li>     Climb Rate: Vertical Speed Indicator (feet per minute)     </li> <li>     Trim: Shows the input data of each trim from -1 to +1     </li> </ul>  \u2705  TIPS   See the Basic Controls section for a detailed description of each key for controlling the flight control surfaces and trim of each Aileron, Elevator, Rudder as Primary Control and Flap as Secondary Control."},{"location":"simdrive/intro/morai-simair/","title":"About MORAI SIM: Drive","text":"<p>This section explains the concept and features of MORAI SIM: Air and the configuration environment.</p>"},{"location":"simdrive/intro/morai-simair/#concept-and-key-features","title":"Concept and Key Features","text":"<p>MORAI SIM: Air is a simulation platform that can verify autonomous flight systems used in various industries such as Urban Air Mobility (UAM), unmanned aerial vehicles (Drones), and light aircraft in a virtual environment. </p> <p>MORAI SIM: Air provides a variety of real flight environments as virtual simulations using Digital Twin technology, so the safety of the aircraft can be verified more efficiently and accurately. And it reporduces actual flight facilities such as vertical take-off and landing facilities (vertiport) and airports for vehicle verification as a digital twin environment, and simulates the actual measurement data provided to the aircraft from each facility as it is.  MORAI SIM: Air virtualizes various sensors and flight dynamics model (FDM) specialized for the aviation industry, and can transmit and receive data in real-time by applying communication such as ROS2 and UDP. </p> <p>The main features of MORAI SIM: Air are as follows.</p> <ul> <li>Provides a simulation environment based on Unreal Engine, a physics engine </li> <li>Supports realistic flight dynamics model (FDM) for Cirrus SR22T and 6 degrees of freedom (DOF) data</li> <li>Supports realistic flight dynamics model (FDM) developed with JSBSim, and 6 degrees of freedom (DOF) data</li> <li>Reproduces weather and time variation with dynamic environment</li> <li>Integration with external sensors and systems: Camera, GNSS, IMU, RADAR, 3D LiDAR</li> <li>Supports real-time transmission of flight status messages and sensor data through ROS2 and UDP communication</li> </ul>"},{"location":"simdrive/intro/morai-simair/#simulation-environment-based-on-unreal-engine","title":"Simulation environment based on Unreal Engine","text":"<p>MORAI SIM: Air utilizes the physics engine, Unreal Engine to provide a high-fidelity simulation environment for autonomous aerial vehicles, and it can reproduce object movement, physical conditions such as collision and penetration, as well as color and texture realistically. </p> <p>Unreal Engine allows for the creation of highly detailed 3D environments and provides a sophisticated physics engine that can simulate the behavior of objects in a realistic manner. This means that the movement of the aerial vehicles, as well as other objects in the simulation environment, are accurately represented. </p> <p>Moreover, the Unreal Engine can render textures and colors realistically, which helps to create a more immersive simulation experience for users. This allows users to visualize and interact with the simulation environment in a way that closely mirrors the real-world environment, and enables them to test and validate the performance of their autonomous flight systems under realistic conditions.</p>  Figure 1. 3D Simulation environment for Duluth airport provided by MORAI SIM: Air"},{"location":"simdrive/intro/morai-simair/#supports-realistic-flight-dynamics-model-and-6-dof","title":"Supports realistic flight dynamics model and 6 DOF","text":"<p>MORAI SIM: Air supports realistic flight dynamics models (FDM) based on JSBSim for simulation modeling of the behavior of aircraft engines and other systems.  Additionally, MORAI SIM: Air implements the Cirrus SR22T aircraft model and 6 degrees of freedom (DOF) data, providing a realistic simulation experience.</p>  Figure 2. Flight of SR22T model implemented in MORAI SIM: Air <p></p> <p> Figure 3. Flight control of SR22T with joystick in MORAI SIM: Air</p>"},{"location":"simdrive/intro/morai-simair/#reproduces-weather-and-time-variation-with-dynamic-environment","title":"Reproduces weather and time variation with dynamic environment","text":"<p>MORAI SIM: Air also includes a simulation of the environment and weather conditions, which affect the flight behavior and performance of the aerial vehicles. This allows users to test their autonomous flight systems under different conditions and scenarios.</p> <p> Figure 4. Reproduced video of weather and time condition changes in MORAI SIM: Air </p>"},{"location":"simdrive/intro/morai-simair/#integration-with-external-sensors-and-real-time-communication","title":"Integration with external sensors and real-time communication","text":"<p>MORAI SIM: Air supports integration with a variety of external sensors commonly used in autonomous flight systems, including Camera, GNSS, IMU, RADAR, and LiDAR sensors. This enables users to test and validate the integration and performance of their sensors and systems in a virtual environment. </p>  Figure 5. Sensor models provided by MORAI SIM: Air <p>Also, MORAI SIM: Air supports real-time communication for flight status messages and sensor data using the ROS2 and UDP communication protocols. This enables users to monitor and analyze the performance of their autonomous flight systems during the simulation in real-time.</p>  Figure 6. Network settings provided by MORAI SIM: Air"},{"location":"simdrive/release/release-notes/","title":"Release Notes","text":"<p>This section describes the additions, changes, and bug fixes reflected in MORAI SIM: Air by latest and previous versions.</p>"},{"location":"simdrive/release/release-notes/#latest","title":"Latest","text":"Version Release Date Additions and Changes Bug Fixes Alpha 1.0 2023/03/27 Initial distribution"},{"location":"simdrive/release/release-notes/#previous-versions","title":"Previous versions","text":"<p>N/A</p>"},{"location":"simdrive/user-guide/","title":"How to Use MORAI SIM: AIR","text":"<ul> <li>Basic Controls</li> <li>Network Configurations</li> <li>Sensors</li> <li>Useful Functions</li> </ul>"},{"location":"simdrive/user-guide/basic-controls/","title":"Basic Controls","text":"<p>This section explains how to operate the keys to control propulsion (airspeed and RPM) and flight control surfaces (heading and attitude, altitude) of the aircraft.</p>"},{"location":"simdrive/user-guide/basic-controls/#propulsion-controls","title":"Propulsion Controls","text":"<p>The keys and methods for the throttle to control the output power of the aircraft such as speed and engine RPM are as follows.</p> Key Action Note <code>E</code> Increase Throttle (up to 1) Air speed and RPM increase faster with long press <code>D</code> Decrease Throttle (down to 0) Air speed and RPM decrease faster with long press <code>C</code> Cut and idle Throttle Press once to set the throttle value to zero <code>B</code> Brake on ground Acts on landing gear brake pads"},{"location":"simdrive/user-guide/basic-controls/#flight-controls","title":"Flight Controls","text":"<p>The keys and methods for controlling each flight control surface and trim for Aileron, Elevator, and Rudder as Primary Control and Flap as Secondary Control are as follows.</p>"},{"location":"simdrive/user-guide/basic-controls/#primary-flight-control-surfaces","title":"Primary Flight Control Surfaces","text":"<p>The control keys for each Aileron, Elevator, and Rudder, which are the control surfaces of the aircraft that control the aircraft's heading and attitude, such as bank, pitch, and yaw, are as follows.</p> Key Action Note Num pad <code>4</code> and <code>6</code> Aileron Left and Right Bank (rolling), x-axis direction control (left/right during flight) Num pad <code>2</code> and <code>8</code> Elevator Up and Down Pitching, z-axis direction control Num pad <code>7</code> and <code>9</code> Rudder Left and Right Yawing, z-axis direction control (left/right on the ground) Num pad <code>5</code> Aileron and Rudder to stabilized position <code>Space</code> Elevator to stabilized position"},{"location":"simdrive/user-guide/basic-controls/#secondary-flight-control-surfaces","title":"Secondary Flight Control Surfaces","text":"<p>The control keys for Flaps that generate high lift by changing the shape of the main wing are as follows.</p> Key Action Note <code>R</code> Flap 0 stage Positioned at flap 0 degree in any section <code>F</code> Flap retract 1 step <code>V</code> Flap extract 1 step"},{"location":"simdrive/user-guide/basic-controls/#trim-flight-control-surfaces","title":"Trim Flight Control Surfaces","text":"<p>The trim keys for each fine attitude adjustment of Aileron, Elevator, and Rudder are as follows.</p> Key Action Note <code>T</code> Trim the Elevator down Fine adjust the pitch of the elevator down <code>G</code> Trim the Elevator up Fine adjust the pitch of the elevator up <code>Y</code> Trim the Aileron to the right Fine adjust the bank of aileron to the right <code>H</code> Trim the Aileron to the left Fine adjust the bank of aileron to the left <code>U</code> Trim the Rudder to the right Fine adjust the yaw of rudder to the right <code>J</code> Trim the Rudder to the left Fine adjust the yaw of rudder to the left"},{"location":"simdrive/user-guide/basic-controls/#other-controls","title":"Other Controls","text":"<p>The keys to operate the control mode, viewpoint and location of the aircraft in the simulator are as follows.</p> Key Action <code>I</code> Return the aircraft's position to its original spawn point <code>Q</code> Toggel between keyboard and joystick in Manual Control Mode **Right-click + Drag ** Adjust Aircraft View Orientation **Mouse wheel scrolls up and down ** Zooming in and out of the simulator screen  \u2705  TIPS  Revert to spawn point: Each time <code>I</code> is pressed, the spawn point changes in the order of location of 'Runway 27 \u2192 09 \u2192 03 \u2192 21'.  <p></p>  \u2705  TIPS  Adjusting the Aircraft View Orientation: By right-clicking and dragging the mouse on the simulator screen, you can adjust the viewing direction of the aircraft to multiple angles.  <p></p>  \u2139\ufe0f  NOTE   The ability to change the spawn location will be added in a future version.  <p></p>"},{"location":"simdrive/user-guide/network/","title":"Network Configuration","text":"<p>This section describes the configuration of the network environment of MORAI SIM: Air, the setting method for data communication between external systems, and sending/receiving messages.</p>"},{"location":"simdrive/user-guide/network/#supported-communication-method","title":"Supported communication method","text":"<p>MORAI SIM: Air supports UDP and ROS2 for network communication between the simulator and external systems.</p> <p>UDP is a widely used network protocol for transmitting data over the internet, while ROS2 (Robot Operating System 2) is a popular middleware for robotics and automation applications.  The MORAI SIM: Air simulator allows for sending sensor data and receiving aircraft control messages using either UDP or ROS2 communication methods. </p> <p>To communicate with MORAI SIM: Air,  Depending on the simulator's message transmission/reception method, the following network settings are required.</p>  Figure 1. Network communication method supported by MORAI SIM: Air <ul> <li> <p>MORAI SIM: Air sends sensor data to an external system</p> <ol> <li>UDP Network Settings in each sensor model in the simulator</li> <li>Receive UDP messages and publish to ROS2 using UDP to ROS2 Bridge</li> </ol> </li> <li> <p>MORAI SIM: Air receives aircraft control messages from an external system</p> <ol> <li>UDP Network Settings provided by the simulator (Subscriber IP/Port setting)</li> <li>Subscribe to ROS2 messages and them over UDP using UDP to ROS2 Bridge</li> </ol> </li> </ul> <p>The UDP to ROS2 Bridge serves to connect data between the UDP-based simulator and the ROS2 system by receiving and transmitting UDP signals and issuing and subscribing to ROS2 as shown below.</p>  Figure 2. Role of 'UDP to ROS2 Bridge'  \u26a0\ufe0f   WARNING   The current simulator does not provide direct support for transmitting/receiving ROS2 messages. Therefore, UDP to ROS2 Bridge should be used for ROS2 communication with an external system."},{"location":"simdrive/user-guide/network/#receiving-aircraft-control-messages","title":"Receiving Aircraft Control Messages","text":"<p>For the simulator to receive ROS2 messages via UDP,  Configure the ROS2 to UDP communication environment and set the network of the simulator in the order below.</p>"},{"location":"simdrive/user-guide/network/#step-1-subscribe-to-ros2-messages","title":"Step 1: Subscribe to ROS2 messages","text":"<p>For this step, you need to install and run UDP to ROS2 Bridge.</p>  \u2705  TIPS  See the UDP to ROS2 Bridge User Guide provided separately."},{"location":"simdrive/user-guide/network/#step-2-udp-network-settings-in-the-simulator","title":"Step 2: UDP network settings in the simulator","text":""},{"location":"simdrive/user-guide/network/#1-activate-the-network-menu","title":"1) Activate the network menu","text":"<p>Click Network in the top left menu as shown below. </p>"},{"location":"simdrive/user-guide/network/#2-configure-host-ipport","title":"2) Configure Host IP/Port","text":"<p>The method of receiving aircraft control messages in the simulator consists of GHOST MODE and EXTERNAL CTRL protocol.</p> <p>Configure the Host IP/Port as below to operate the aircraft in GHOST MODE by receiving external control messages.</p> <ul> <li>Host IP: Enter the IP of the host PC running the simulator</li> <li>Host Port: Enter the Port of Host PC</li> </ul> <p>Host IP/Port configuration method for EXTERNAL CTRL protocol is the same as above.</p>"},{"location":"simdrive/user-guide/network/#3-network-connection","title":"3) Network connection","text":"<p>Click Connect at the bottom PROTOCOL_SUB_GHOSTMODE or PROTOCOL_SUB_EXTERNALCTRL.  Then, it enters into a standby state in which a control message can be received.</p>"},{"location":"simdrive/user-guide/network/#step-3-send-messages-from-external-server","title":"Step 3: Send messages from external server","text":"<p>Send a message from the external server to the simulator using UDP to ROS2 Bridge.</p> <ul> <li>Send coordinates by playing rosbag file</li> <li>Send UDP packet</li> </ul> <p>UDP messages received by each mode are as follows.</p> <ul> <li>GHOST MODE:<ul> <li><code>Cirrus_tx</code></li> </ul> </li> <li>EXTERNAL CTRL: <ul> <li><code>CIRRUS_CONTROL_POSITION</code>   // 101  SIM -&gt; JSBSim</li> <li><code>CIRRUS_BRAKING</code>            // 102</li> <li><code>CIRRUS_ENGINE</code>             // 103</li> </ul> </li> </ul>  \u2705  TIPS   For details on the types and structure of UDP messages received in GHOST MODE or EXTERNAL CTRL, see the UDP Recieve Messages section."},{"location":"simdrive/user-guide/network/#sending-sensor-messages","title":"Sending Sensor Messages","text":"<p>For the simulator to send UDP messages via ROS2,  Set the sensor network of the simulator in the order below and configure the UDP to ROS2 communication environment.</p>"},{"location":"simdrive/user-guide/network/#step-1-senosr-network-settings-in-the-simulator","title":"Step 1: Senosr network settings in the simulator","text":""},{"location":"simdrive/user-guide/network/#1-place-sensors-on-the-aircraft","title":"1) Place sensors on the aircraft","text":"\u2705  TIPS   For details on how to place the sensor, see the Sensor Placement section."},{"location":"simdrive/user-guide/network/#2-configure-destination-ipport","title":"2) Configure Destination IP/Port","text":"<p>Configure Destination IP/Port for UDP network in Network Settings at the bottom of the sensor setting window.</p> <p></p> <ul> <li>Destination IP and Port: <ul> <li>Enter the IP and port of the target server that transmits sensor data in the simulator.</li> <li>In case of ROS2 communication in the server, enter the IP and Port of the server where UDP to ROS2 Bridge is installed.</li> </ul> </li> </ul>"},{"location":"simdrive/user-guide/network/#3-network-connection_1","title":"3) Network connection","text":"<p>Click Connect at the bottom of Network Settings.  Then, it enters into a standby state in which sensor messages can be transmitted.</p> <p>In the case of a Camera sensor, when a sensor network is connected, a preview window appears on the left side of the sensor setting window as shown below. </p>"},{"location":"simdrive/user-guide/network/#step-2-publishing-to-ros2","title":"Step 2: Publishing to ROS2","text":"<p>For this step, you need to install and run UDP to ROS2 Bridge.</p>  \u2705  TIPS  See the UDP to ROS2 Bridge User Guide provided separately.   \u2705  TIPS   For details on the types and structure of UDP and ROS2 messages sent by the simulator, see the UDP Send Messages and ROS2 Send Messages  section."},{"location":"simdrive/user-guide/network/#network-message-specifications","title":"Network Message Specifications","text":"<p>This section describes details such as the type and format of messages received and transmitted by MORAI SIM: Air as described above.</p>"},{"location":"simdrive/user-guide/network/#udp-messages-structure","title":"UDP Messages Structure","text":"<p>All receiving and sending UDP messages are composed of 'Header + Data'.</p> <p>If the UDP packet size exceeds 65000, it is internally separated and transmitted, and reassembled at the receiving point. However, if the receiver uses Morai's UDP module, even if the defined max buffer is less than 65000, the separation logic works when trying to send a message larger than the max buffer.</p> <p>Ex) #define Max_buffer 1024: If the total data size to be sent exceeds 1024, it is sent separately.</p>"},{"location":"simdrive/user-guide/network/#header-information","title":"Header Information","text":"<p><pre><code>struct MoraiHeader\n{\nchar header_name[12];         // MoraiHeader\nint data_type;                 // data_type.h \ucc38\uc870\nint data_size;                 // data size\n};\n</code></pre> </p>"},{"location":"simdrive/user-guide/network/#data-information","title":"Data Information","text":"<p>The detailed data structure of the UDP message is described for each received and transmitted message as follows.</p> <ul> <li>4 recieve control messages: <ul> <li><code>Cirrus_tx</code></li> <li><code>Cirrus_ControlPosition</code></li> <li><code>Cirrus_Braking</code> </li> <li><code>Cirrus_Engine</code></li> </ul> </li> <li>5 send sensor messages: <ul> <li><code>Sensor_NavSatFix</code> (GNSS)</li> <li><code>Sensor_Imu</code></li> <li><code>Sensor_Image</code></li> <li><code>Sensor_Radar</code></li> <li><code>SensorLidar</code></li> </ul> </li> </ul> <pre><code>/*\nMorai Data type define\n*/\n#ifndef DATA_TYPE_H\n#define DATA_TYPE_H\nenum class MoraiDataType : uint32_t\n{\nNONE = 0,\nSENSOR_GNSS,\nSENSOR_IMAGE,\nSENSOR_RADAR,\nSENSOR_IMU,\nSENSOR_LIDAR,\nCIRRUS_TX = 0x64,               // 100  cirrus -&gt; morai\nCIRRUS_CONTROL_POSITION,        // 101  SIM -&gt; JSBSim\nCIRRUS_BRAKING,                 // 102  \nCIRRUS_ENGINE,                  // 103\nLARGE_DATA = 0x3E8,             // 1000 for test\n};\n#endif\n</code></pre> <p> And the data structure of all receiving and sending UDP messages includes the following common <code>struct</code> type.</p> <pre><code>struct Ros_Timestamp\n{\n    int32_t sec;\n    uint32_t nanosec;\n};\n\nstruct Ros_HEADER\n{\n    Ros_Timestamp stamp;\n    uint8_t str_len;\n    char* frame_id;\n};\n\nstruct Sensor_NavSatStatus\n{\n    int8_t status;\n    uint16_t service;\n};\n</code></pre>"},{"location":"simdrive/user-guide/network/#udp-recieve-messages","title":"UDP Recieve Messages","text":"<p>The data structure and packets for each UDP message received by Morai SIM from the external Cirrus system are as follows.</p>"},{"location":"simdrive/user-guide/network/#cirrus_tx","title":"Cirrus_tx","text":"<p><pre><code>struct Cirrus_Tx\n{\nfloat lon;              // deg\nfloat lat;              // deg\nfloat alt;              // ft\nfloat heading;          // deg\nfloat roll;             // deg\nfloat pitch;            // deg\nfloat sur_aileron;      // [-1 ~ 1]\nfloat sur_flap;         // [-1 ~ 1]\nfloat sur_elevator;     // [-1 ~ 1]\nfloat sur_rudder;       // [-1 ~ 1]\n};\n</code></pre> </p>"},{"location":"simdrive/user-guide/network/#cirrus_controlposition","title":"Cirrus_ControlPosition","text":"<p><pre><code>struct Cirrus_ControlPosition\n{\nfloat SetDaCmd;             // get_aileron              -1 ~ +1\nfloat SetRollTrimCmd;       // get_aileron_trim         (-0.1 ~ +0.1)\nfloat SetDeCmd;             // get_elevator             -1 ~ +1\nfloat SetPitchTrimCmd;      // get_elevator_trim        (-0.1 ~ +0.1)\nfloat SetDrCmd;             // get_rudder               -1 ~ +1                 \nfloat SetDsCmd;             // get_rudder               -1 ~ +1                 \nfloat SetYawTrimCmd;        // get_rudder_trim          (-0.1 ~ +0.1)\nfloat SetDfCmd;             // get_flaps                0 ~ 1\n};\n</code></pre> </p>"},{"location":"simdrive/user-guide/network/#cirrus_braking","title":"Cirrus_Braking","text":"<p><pre><code>struct Cirrus_Braking\n{\nfloat SetBrake;             // Left + Right             0~1   \n};\n</code></pre> </p>"},{"location":"simdrive/user-guide/network/#cirrus_engine","title":"Cirrus_Engine","text":"<p><pre><code>struct Cirrus_Engine\n{\nfloat SetThrottleCmd;      // get_throttle(i)           0~1\n};\n</code></pre> </p>"},{"location":"simdrive/user-guide/network/#udp-send-messages","title":"UDP Send Messages","text":"<p>The data structure and packet for each UDP message transmitted by MORA SIM to the external Cirrus system are as follows.</p>"},{"location":"simdrive/user-guide/network/#gnss","title":"GNSS","text":"<pre><code>struct Sensor_NavSatFix\n{\nint id;\nRos_HEADER header;\nSensor_NavSatStatus status;\ndouble latitude;\ndouble longitude;\ndouble altitude;\ndouble position_covariance[9];\nuint8_t position_covariance_type;\n};\n</code></pre>"},{"location":"simdrive/user-guide/network/#imu","title":"IMU","text":"<p><pre><code>struct Sensor_Imu\n{\nuint32_t id;\nRos_HEADER header;\ngeometry_msgs::Quarternion orientation;\ndouble orientation_covariance[9];\ngeometry_msgs::Vector3 angular_velocity;\ndouble angular_velocity_covariance[9];\ngeometry_msgs::Vector3 linear_acceleration;\ndouble liner_acceleration_covariance[9];\n};\n</code></pre> </p>"},{"location":"simdrive/user-guide/network/#camera-image","title":"Camera (Image)","text":"<p><pre><code>struct Sensor_Image\n{\nint id;\nRos_HEADER header;\nuint32_t height;\nuint32_t width;\nuint16_t str_len;\nchar* encoding;\nuint8_t is_bigendian;\nuint32_t step;\nuint8_t* data;\n};\n</code></pre> </p>"},{"location":"simdrive/user-guide/network/#radar","title":"Radar","text":"<p><pre><code>struct Sensor_Radar {\nuint32_t id;\nRos_HEADER header;\nuint8_t num_detections;\nRadar_Detection detections[64];\n};\n</code></pre> </p>"},{"location":"simdrive/user-guide/network/#lidar","title":"Lidar","text":"<p><pre><code>typedef struct PointField\n{\nuint8_t name_length;\nstd::string name;\nuint32_t offset;\nuint8_t datatype;\nuint32_t count;\n} POINT_FIELD;\ntypedef struct SensorLidar\n{\nuint32_t id;\nRosHeader header;\nuint32_t height;            // 2D structure of the point cloud.If the cloud is unordered, height is\nuint32_t width;             // 1 and width is the length of the point cloud.\nuint8_t fields_len;         // size of PointField\nPointField* fields;           // Describes the channels and their layout in the binary data blob.\nbool    is_bigendian;       // Is this data bigendian ?\nuint32_t  point_step;         // Length of a point in bytes\nuint32_t  row_step;           // Length of a row in bytes\nuint8_t* data;                // Actual point data, size is(row_step* height)\nbool is_dense;              // True if there are no invalid points\n} SENSRO_LIDAR;\n</code></pre> </p> <p></p>"},{"location":"simdrive/user-guide/network/#ros2-send-messages","title":"ROS2 Send Messages","text":"<p>The type and data format for each ROS2 message transmitted by MORA SIM to the external Cirrus system are as follows.</p>"},{"location":"simdrive/user-guide/network/#gnss_1","title":"GNSS","text":"<ul> <li> <p>Message Type: sensor_msgs/msg/NavSatFix</p> </li> <li> <p>Data Format</p> No Name Type Unit Remarks 1 header Header 2 status NavSatStatus 3 latitude double deg 4 longitude double deg 5 altitude double deg 6 position_covariance double[9] East, North, and Up (ENU), in row major order 7 position_covariance_type uint8 deg <code>0</code> : COVARIANCE_TYPE_UNKNOWN  <code>1</code> : COVARIANCE_TYPE_APPROXIMATED  <code>2</code> : COVARIANCE_TYPE_DIAGONAL_KNOWN  <code>3</code> : COVARIANCE_TYPE_KNOWN </li> </ul>"},{"location":"simdrive/user-guide/network/#imu_1","title":"IMU","text":"<ul> <li> <p>Message Type: sensor_msgs/msg/Imu</p> </li> <li> <p>Data Format</p> No Name Type Unit Remarks 1 header Header 2 orientation Quaternion 3 orientation_covariance double[9] Row major about x, y, z axes 4 angular_velocity Vector3 rad/sec 5 angular_velocity_covariance double[9] Row major about x, y, z axes 6 linear_acceleration Vector3 m/s^s 7 linear_acceleration_covariance double[9] Row major about x, y, z axes </li> </ul>"},{"location":"simdrive/user-guide/network/#image-camera","title":"Image (Camera)","text":"<ul> <li> <p>Message Type: sensor_msgs/msg/Image</p> </li> <li> <p>Data Format</p> No Name Type Unit Remarks 1 header Header 2 height uint32 number of rows 3 width uint32 number of columns 4 encoding string 'bgra8' 5 is_bigendian uint8 6 step uint32 value is (width * 4) 7 data uint8[] size is (step * height) </li> </ul>"},{"location":"simdrive/user-guide/network/#radar_1","title":"Radar","text":"<ul> <li> <p>Message Type: morai_msgs/msg/RadarDetections</p> </li> <li> <p>Data Format</p> No Name Type Unit Remarks 1 header Header 2 detections RadarDetection[] <ul> <li>RadarDetection</li> </ul> No Name Type Unit Remarks 1 detection_id uint16 Index of each radar detection point 2 position Point m x, y, z position of each radar detection point 3 azimuth float deg azimuth angle of each radar detection point in Degree 4 rangerate float m/s relative velocity of the radar detected target w.r.t radial direction 5 amplitude float amplitude of the reflected signal of the radar detected target(rcs) </li> </ul>"},{"location":"simdrive/user-guide/network/#lidar_1","title":"Lidar","text":"<ul> <li> <p>Message Type: sensor_msgs/msg/PointCloud2</p> </li> <li> <p>Data Format</p> No Name Type Unit Remarks 1 header Header 2 height uint32 If the cloud is unordered, height is 1 3 width uint32 Width is the length of the point cloud 4 fields PointField[] Describes the channels and their layout in the binary data blob 5 is_bigendian 6 point_step uint32 Length of a point in bytes 7 data uint8[] size is (row_step*height) 8 is_dense bool True if there are no invalid points </li> </ul>"},{"location":"simdrive/user-guide/sensors/","title":"Sensor Settings","text":"<p>This section describes how to place each sensor provided by the simulator on the aircraft and set the sensor parameters to obtain sensor data.</p>"},{"location":"simdrive/user-guide/sensors/#sensor-placement","title":"Sensor Placement","text":"<p>Place the sensors on the aircraft in the order below.</p> <p>1) Click \u2228 on the right side of the sensor icon in the menu at the top left as shown below.</p> <p></p> <p>2) When you select a sensor to be placed in the popped-up sensor list, the following Sensor Settings window appears on the right.  </p> <p>Ex) When selecting Camera </p> <p></p> <p>3) When you click the mouse on the position of the aircraft where you want to place the sensor, the corresponding sensor item is created in Sensor Settings. </p> <p>Ex) When placing Camera </p>"},{"location":"simdrive/user-guide/sensors/#adding-sensors-or-placing-different-types-of-sensors","title":"Adding sensors or placing different types of sensors","text":"<p>The method of adding the same type of sensor or placing a different type of sensor is the same as the sensor placement method 1) to 3) above.</p>"},{"location":"simdrive/user-guide/sensors/#deleting-placed-sensors","title":"Deleting placed sensors","text":"<p>In Sensor Settings on the right, click ... of the sensor item you want to delete and click Delete.</p> <p>Ex) When deleting Camera </p>  \u2705  TIPS   The method for deleting other types of sensors is the same as above."},{"location":"simdrive/user-guide/sensors/#sensor-parameter-setting","title":"Sensor Parameter Setting","text":"<p>In the sensor parameter setting, the parameters for the location coordinates (x, y, z) and posture (rotation angle of roll, pitch, and yaw) of the placed sensor and the specialized functions supported by each sensor model are set.  When you click the created sensor item name (eg. Camera-0), the parameter setting window for the corresponding sensor appears as shown below.</p> <p>Ex) Parameter setting window for Camera </p>"},{"location":"simdrive/user-guide/sensors/#location-coordinates","title":"Location Coordinates","text":"<p>The location coordinates of all sensors provided by the simulator are set based on the aircraft coordinate system below.</p> <p></p>"},{"location":"simdrive/user-guide/sensors/#lens-distortion-of-camera","title":"Lens Distortion of Camera","text":"<p>The Lens Distortion effect reproduces the appearance of a real camera lens by distorting the final rendered image.  The simulator's camera sensor model provides Lens Distortion as shown below.</p> <p></p> <p>The setting parameter for lens distortion is as follows:</p> <ul> <li>K1, K2, K3: parameters related to radial distortion, simulating the phenomenon of radial distortion by the refractive index of a convex lens</li> <li>P1, P2: Parameter for making sensor attachment errors that occur during the camera assembly process</li> </ul>"},{"location":"simdrive/user-guide/sensors/#gaussian-noise-of-gnss","title":"Gaussian Noise of GNSS","text":"<p>The simulator's GPS sensor model supports Gaussian Noise as shown below.</p> <p></p> <p>The value of Gaussian Noise is adjusted by entering Mean(m) and Stdev(%) values.</p>"},{"location":"simdrive/user-guide/sensors/#network-settings","title":"Network Settings","text":"<p>The network of the sensor model provided by the simulator only sets UDP communication as shown below.</p> <p></p>  \u2705  TIPS   For information on how to set up a sensor network, see the Sending Sensor Messages section."},{"location":"simdrive/user-guide/useful/","title":"Useful functions and Tips","text":""},{"location":"simdrive/user-guide/useful/#terminology","title":"Terminology","text":"<p>The main teminology used for this documents is as follows:</p> Old Variable Name New Variable Name or Expression current_page page include_nav nav|length&gt;1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico"},{"location":"simdrive/user-guide/useful/#conventions","title":"Conventions","text":"<p>The main teminology used for this documents is as follows:</p>"}]}